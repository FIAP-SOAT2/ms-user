openapi: 3.0.0
info:
  title: API - User Microservice
  version: 1.0.0
servers:
  - url: 'http://localhost:4001'
tags:
  - name: User
paths:
  /api/user:
    post:
      tags:
        - User
      summary: CreateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
        '404':
          description: Not found
        '500':
          description: Internal server error
    get:
      tags:
        - User
      summary: GetAllUser
      parameters:
        - name: page
          in: query
          schema:
            type: integer
          example: '1'
        - name: paginationLimit
          in: query
          schema:
            type: integer
          example: '1000'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetUser'
        '400':
          description: Invalid input
        '404':
          description: Not found
        '500':
          description: Internal server error
  /api/filters:
    get:
      tags:
        - User
      summary: getUserByFilters
      parameters:
        - name: cpf
          in: query
          schema:
            type: string
          example: '33372047087'
        - name: email
          in: query
          schema:
            type: string
          example: 'josemaria@yopmail.com'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUser'
        '400':
          description: Invalid input
        '404':
          description: Not found
        '500':
          description: Internal server error
  /api/user/{user_id}:
    get:
      tags:
        - User
      summary: getUserById
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUser'
        '400':
          description: Invalid input
        '404':
          description: Not found
        '500':
          description: Internal server error
    delete:
      tags:
        - User
      summary: deleteUser
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUser'
        '400':
          description: Invalid input
        '404':
          description: Not found
        '500':
          description: Internal server error
    patch:
      tags:
        - User
      summary: patchUser
      responses:
        '200':
          description: Successful response
          content:
            application/json: { }
        '400':
          description: Invalid input
        '404':
          description: Not found
        '500':
          description: Internal server error
components:
  schemas:
    User:
      type: object
      properties:
        name:
          type: string
          example: 'jose maria'
        cpf:
          type: integer
          example: 82872241878
        email:
          type: string
          example: "josemaria@yopmail.com"
        phone:
          type: string
          example: "3799856523244"
        profile:
          type: integer
          example: 6
    GetUser:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "jose maria"
        email:
          type: string
          example: "jose.maria@yopmail.com"
        phone:
          type: string
          example: "359999999999"
        cpf:
          type: string
          example: "1111222222222"
        profile:
          type: string
          example: "CUSTOMER"
